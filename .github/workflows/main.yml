name: Main

on:
  push:
    branches:
      - ActionTest

jobs:
  build:
    name: ${{ matrix.config.os }}-${{ matrix.config.type }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - os: ubuntu-latest
            type: linux
            architecture: x86_64
            makefile: Makefile
          
          - os: ARM64
            type: linux
            architecture: arm64
            makefile: MakefileNvidia
            
          - os: windows
            type: windows
            
          - os: macOS
            type: Ios
          
          - os: macOS
            type: Osx
                    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          
      - name: Configure Windows
        if: matrix.config.os == 'windows'
        uses: microsoft/setup-msbuild@v1.0.0

      - name: Windows
        if: matrix.config.os == 'windows'
        uses:  ./.github/actions/windows
        with:
          BuildSolution: PopH264.visualstudio\PopH264.sln
          BuildPlatform: x64
          BuildConfiguration: Release
          # would be nice to extract this from visual studio
          BuildDirectory: Build\Release_x6
      
      - name: Ios
        if: matrix.config.type == 'Ios'
        uses:  ./.github/actions/ios
        with:
          BuildProject: PopH264.xcodeproj
          BuildScheme: PopH264_Ios
      
      - name: Osx
        if: matrix.config.type == 'Osx'
          uses:  ./.github/actions/ios
          with:
            BuildProject: PopH264.xcodeproj
            BuildScheme: PopH264_Osx

      - name: Linux
        if: matrix.config.type == 'linux'
        uses:  ./.github/actions/linux
        with:
          architecture: ${{ matrix.config.architecture }}
          makefile: ${{ matrix.config.makefile }}

        
#       - name: Create Artifact
#         uses: actions/upload-artifact@v2
#         with:
#           name: ${{ matrix.config.name }}
#           path: |
#             PopH264.Linux/PopH264${{ matrix.config.name }}.so
#             PopH264.Linux/PopH264TestApp${{ matrix.config.name }}
